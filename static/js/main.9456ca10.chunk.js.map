{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","this","keyupHandler","bind","removeEventListener","e","setState","key","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,MAFhB,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKC,aAAaC,KAAKF,SAN9D,kCASE,WACEF,SAASK,oBAAoB,QAASH,KAAKC,aAAaC,KAAKF,SAVjE,0BAaE,SAAaI,GACXJ,KAAKK,SAAS,CAAER,WAAYO,EAAEE,QAdlC,oBAiBE,WACE,IAAQT,EAAeG,KAAKJ,MAApBC,WAER,OACE,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIV,EAAU,mCACsBA,EADtB,KAEN,kCA1BhB,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAZ,SAASa,eAAe,W","file":"static/js/main.9456ca10.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string | null;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.keyupHandler.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.keyupHandler.bind(this));\n  }\n\n  keyupHandler(e: KeyboardEvent) {\n    this.setState({ pressedKey: e.key });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            pressedKey\n              ? `The last pressed key is [${pressedKey}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}